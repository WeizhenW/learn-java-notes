OOP

-Classes
    - Classes are a blueprint for objects. Blueprints detail the general structure. 
    - An instance is the thing itself.

A class is the set of instructions that describe how an instance can behave and what information it contains.
We create objects (instances of a class) using a constructor method. The constructor is defined within the class.

----------------
- Instance variables, or instance fields are the state in our objects.

Classes define the state and behavior of their instances. 
- Behavior comes from methods defined in the class. 
- State comes from instance fields declared inside the class.

public class Dog {
  // instance field
  String breed;
  boolean hasOwner;
  // constructor method
  public Dog(String dogBreed, boolean dogOwned) {
   
    breed = dogBreed;
    hasOwner = dogOwned;
  }
  public static void main(String[] args) {
    /* 
    create instance: 
    use 'new' operator and invoke constructor
    */
    Dog fido = new Dog("poodle", true);
    /* 
    fields are accessed using: 
    the instance name, `.` operator, and the field name.
    */
    fido.breed;
    // "poodle"
  }
}
------------------
- method
class Car {
  String color;
  int milesDriven;
  //constructor method
  public Car(String carColor) {
    color = carColor;
    milesDriven = 0;         
  }
  //drive method
  public void drive() {
     String message = "Miles driven: " + milesDriven;
     System.out.println(message);
  }

  public static void main(String[] args){
    //create new instance by invoking the constructor method
     Car myFastCar = new Car("red");
     //call the drive method on myFastCar instance
     myFastCar.drive();
  }
}

A method is a task that an object of a class performs.

------
method with return

public int numberOfTires() {
   int tires = 4;
   return tires;
}
- int signifies the data type of the value returned
- needs to have return keyword in the method scope
- The void keyword (which means “completely empty”) indicates to the method that no value is returned after calling that method.

------
toString() method - tell about the object

class Car {

    String color;

    public Car(String carColor) {
        color = carColor;
    }

    public static void main(String[] args){
        Car myCar = new Car("red");
        System.out.println(myCar);
    }

   public String toString(){
       return "This is a " + color + " car!";
   }
}